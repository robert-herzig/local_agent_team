version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./generated_images:/app/generated_images
      - ./uploads:/app/uploads
      - ./prompts.json:/app/prompts.json
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - PYTHONPATH=/app
    working_dir: /app
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  # Optional: Redis for session management (currently not needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - app-network

  # Optional: Add this when implementing RAG with external ChromaDB
  # chromadb:
  #   image: chromadb/chroma:latest
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - chromadb_data:/chroma/chroma
  #   restart: unless-stopped
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  # redis_data:
  # chromadb_data:
